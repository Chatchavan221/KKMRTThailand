package com.example.rnd.kkmrtthailand;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.ContentResolver;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * Created by rnd on 7/26/16 AD.
 */
public class Capt extends Activity  {

    private TextView messageText;
    private Button uploadButton,  btnCamera1;
    private ImageView imageview;
    private int serverResponseCode = 0;
    private ProgressDialog dialog = null;

    private String upLoadServerUri = null;
    private String imagepath = null;
    public static int REQUESTSERVER = 1;
    public static final int REQUEST_CAMERA = 2;
    Uri uri;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.capture);

        btnCamera1 = (Button)findViewById(R.id.btnCamera);
        uploadButton = (Button) findViewById(R.id.btnUpload);
        imageview = (ImageView) findViewById(R.id.imageview);
        upLoadServerUri = "http://10.0.2.2/UploadToServer.php";

    //การใช้งานกล้องเพื่อถ่ายภาพ
        btnCamera1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent it = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                String timestamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
                String imagefilename = "IMG_" + timestamp + ".jpg";

                File file = new File(Environment.getExternalStorageDirectory(), "DCIM/Camera/" + imagefilename);
                uri = Uri.fromFile(file);
                it.putExtra(MediaStore.EXTRA_OUTPUT, uri);
                startActivityForResult(Intent.createChooser(it, "Take a Picture"), REQUEST_CAMERA);
            }
        });


        //สำหรับการอัพโหลดรูปภาพ
        uploadButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                dialog = ProgressDialog.show(Capt.this, "", "Uploading Image", true);
                messageText.setText("Upload Start");
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        uploadFile(imagepath);
                    }
                }).start();
            }
        });
    }



    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

        if (requestCode == REQUEST_CAMERA && resultCode == RESULT_OK) {
            getContentResolver().notifyChange(uri, null);
            ContentResolver cr = getContentResolver();
            try {
                Bitmap bitmap = MediaStore.Images.Media.getBitmap(cr, uri);
                imageview.setImageBitmap(bitmap);
                Toast.makeText(getApplicationContext(), uri.getPath(), Toast.LENGTH_LONG).show();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        if (requestCode == REQUESTSERVER && resultCode == RESULT_OK) {
            Bitmap bitmap = BitmapFactory.decodeFile(imagepath);
            imageview.setImageBitmap(bitmap);
        }
    }







    public int uploadFile(String sourceFileUri){

        String fileName = sourceFileUri;
        HttpURLConnection conn = null;
        DataOutputStream dos = null;
        String lineEnd = "\r\n";
        String twoHyphens = "--";
        String boundary = "*****";
        int byteRead,byteAvailable,bufferSize;
        byte[] buffer;
        int maxBufferSize = 1 * 1024 * 1024;
        File sourceFile = new File(sourceFileUri);

        if (!sourceFile.isFile()){
            dialog.dismiss();

            Log.e("uploadFIle","Source File not exist:"+imagepath);

            runOnUiThread(new Runnable() {
                @Override
                public void run() {
                    messageText.setText("Source File not exist:"+imagepath);
                }
            });
            return 0;

        }
        else
        {
            try{
                FileInputStream fileinputStream = new FileInputStream(sourceFile);
                URL url = new URL(upLoadServerUri);

                // Open a HTTP  connection to  the URL
                conn = (HttpURLConnection) url.openConnection();
                conn.setDoInput(true); // Allow Inputs
                conn.setDoOutput(true); // Allow Outputs
                conn.setUseCaches(false); // Don't use a Cached Copy
                conn.setRequestMethod("POST");
                conn.setRequestProperty("Connection", "Keep-Alive");
                conn.setRequestProperty("ENCTYPE", "multipart/form-data");
                conn.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary);
                conn.setRequestProperty("uploaded_file", fileName);
                dos = new DataOutputStream(conn.getOutputStream());

                dos.writeBytes(twoHyphens + boundary + lineEnd);
                dos.writeBytes("Content-Disposition: form-data; name=\"uploaded_file\";filename=\""+ fileName + "\"" + lineEnd);

                dos.writeBytes(lineEnd);

                byteAvailable = fileinputStream.available();

                bufferSize = Math.min(byteAvailable,maxBufferSize);
                buffer = new byte[bufferSize];

                byteRead = fileinputStream.read(buffer,0,bufferSize);

                while (byteRead >0){
                    dos.write(buffer,0,bufferSize);
                    byteAvailable = fileinputStream.available();
                    bufferSize = Math.min(byteAvailable,maxBufferSize);
                    byteRead = fileinputStream.read(buffer,0,bufferSize);
                }
                dos.writeBytes(lineEnd);
                dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);

                //Response from Server

                serverResponseCode = conn.getResponseCode();
                String serverResponMessage = conn.getResponseMessage();

                Log.i("Upload FIle","Http Response is "+ serverResponMessage+":"+serverResponseCode);

                if (serverResponseCode == 200 ){
                    runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            String msg = "File Upload Complete.\n\n uploadFIle here:\n\n"+"localhost/uploads/";
                            messageText.setText(msg);
                            Toast.makeText(Capt.this,"File Upload Complete",Toast.LENGTH_LONG).show();
                        }
                    });
                }

                fileinputStream.close();
                dos.flush();
                dos.close();
            }catch (MalformedURLException ex){
                dialog.dismiss();
                ex.printStackTrace();

                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        messageText.setText("MalformedURLException Exception: checkscript Url");
                        Toast.makeText(Capt.this,"MalformedURLException",Toast.LENGTH_LONG).show();
                    }
                });

                Log.e("Upload file to server","error"+ ex.getMessage(),ex);
            }catch (Exception e ){
                dialog.dismiss();
                e.printStackTrace();

                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        messageText.setText("Got Exception Log Cat");
                        Toast.makeText(Capt.this,"See Log Cat",Toast.LENGTH_LONG).show();
                    }
                });
                Log.e("Cannot Upload file","Exception:"+e.getMessage(),e);
                e.getMessage();
            }
            dialog.dismiss();
            return serverResponseCode;
        }

    }
}
